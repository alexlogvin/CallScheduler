@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <MudCard Class="my-3">
            <MudCardContent>
                <div class="d-flex justify-space-between align-center">
                    <MudText Typo="Typo.h6">Account</MudText>

                    <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                        <ActivatorContent>
                            <MudAvatar Image="@context.User.GetUserGraphPhoto()">
                                <MudIcon Color="Color.Dark" Icon="@Icons.Material.Rounded.Person" Size="Size.Large" />
                            </MudAvatar>
                        </ActivatorContent>
                        <ChildContent>
                            <MudNavMenu>
                                <MudText Typo="Typo.h6" Class="px-4">@context.User.Identity?.Name</MudText>
                                <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">@context?.User?.GetUserGraphEmail()</MudText>
                                <MudDivider Class="my-2" />
                                <MudNavLink Icon="@Icons.Material.Rounded.Logout" OnClick="BeginLogout">Sign out</MudNavLink>
                            </MudNavMenu>
                        </ChildContent>
                    </MudMenu>
                </div>
            </MudCardContent>
        </MudCard>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex flex-column align-center my-3">
            <MudText Class="mb-2">First, you need to sign in with your Microsoft account</MudText>
            <MudButton Href="authentication/login" Variant="Variant.Filled" EndIcon="@Icons.Custom.Brands.Microsoft" Color="Color.Primary">Sign in</MudButton>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateToLogout("authentication/logout");
    }
}